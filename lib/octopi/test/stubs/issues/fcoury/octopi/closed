HTTP/1.1 200 OK
Server: nginx/0.6.31
Date: Sat, 01 Aug 2009 07:16:04 GMT
Content-Type: application/x-yaml; charset=utf-8
Connection: keep-alive
Set-Cookie: _github_ses=BAh7BiIKZmxhc2hJQzonQWN0aW9uQ29udHJvbGxlcjo6Rmxhc2g6OkZsYXNoSGFzaHsABjoKQHVzZWR7AA%3D%3D--884981fc5aa85daf318eeff084d98e2cff92578f; path=/; expires=Wed, 01 Jan 2020 08:00:00 GMT; HttpOnly
Status: 200 OK
X-Runtime: 651ms
ETag: "556a6892e16a339a5a2721b45d19dc74"
Cache-Control: private, max-age=0, must-revalidate
Content-Length: 6174

--- 
issues: 
- user: BeamerCola
  updated_at: 2009-07-08 18:41:48 -07:00
  body: |-
    Hey there, so I'm trying to get set up with this - and I keep getting the same error whenever I try anything
    
        authenticated_with "BeamerCola", "[api_token]" do |g|
          puts g.repository("test")
        end
    
    Any method I call that hits the `Api::get` method keeps returning:
    
        raise RetryableAPIError, resp.code.to_i if RETRYABLE_STATUS.include? resp.code.to_i
    
    Am I missing something?  It's driving me nuts.  It doesn't work when doing non-authentication either.
    
        user = User.find("fcoury")
    
    Gives me the same error.
    
    When I curl myself - everything works great - so I'm not seeing an issue with my API token or anything
  title: "undefined method \xE2\x80\x98code\xE2\x80\x99 for #<String:0x118ab90>"
  number: 27
  votes: 1
  closed_at: 2009-05-09 12:40:35 -07:00
  labels: []

  created_at: 2009-05-08 19:27:43 -07:00
  state: closed
- user: runpaint
  updated_at: 2009-07-08 18:41:13 -07:00
  body: |-
    `examples/overall.rb` contains:
    
        # commits of a[sic] the repository
        first_commit = repo.commits.first
        puts "First commit: #{first_commit.id} - #{first_commit.message} - by #{first_commit.author['name']}"
    
    `first_commit` is actually the most recent, i.e. last commit. The API doesn't necessarily return the first commit at all due to pagination being unimplemented. I'm opening this ticket because I don't know what we should do here. 
    
    We could change the example to refer to the last commit, but then this creates misleading syntax - `.first` refers to the last.
    
    We could reverse the array before receiving returning it to the caller, but this will surely prove expensive in the case of paginated responses.
    
    The first option is the simplest, but I'm wondering whether there are any better ideas?
  title: Commit Example
  number: 21
  votes: 0
  closed_at: 2009-04-24 15:07:09 -07:00
  labels: 
  - Good to have
  created_at: 2009-04-22 14:49:45 -07:00
  state: closed
- user: runpaint
  updated_at: 2009-07-08 18:41:11 -07:00
  body: The status on http://github.com/develop/develop.github.com/issues/#issue/4 implies that we can get a list of labels for a given repository. The API is still throwing 500s all over the place, so I can't confirm ATM. If so, we want a .labels method for Issue objects.
  title: Add .labels Reader to Issue
  number: 16
  votes: 0
  closed_at: 2009-04-23 04:45:14 -07:00
  labels: []

  created_at: 2009-04-21 17:09:41 -07:00
  state: closed
- user: runpaint
  updated_at: 2009-07-08 18:41:11 -07:00
  body: |-
    If `~/.gitconfig` contains a stanza like the following, and credentials aren't specified in a method call, they should be extracted automatically. 
    
        [github]
             user = kate
             token = 545a9a47c1b7bd99cd06c0f812fde717
    
    An added benefit of this approach is that applications built upon Octopi don't have to think about credential management; if the user has set up Git correctly, they'll just work, otherwise a rebuke an be issued. ;-)
  title: Automatically Parse ~/.gitconfig for Credentials
  number: 15
  votes: 0
  closed_at: 2009-04-22 05:20:32 -07:00
  labels: []

  created_at: 2009-04-21 12:59:45 -07:00
  state: closed
- user: schacon
  updated_at: 2009-07-08 18:41:09 -07:00
  body: ""
  title: ""
  number: 14
  votes: 0
  closed_at: 2009-04-21 08:44:27 -07:00
  labels: []

  created_at: 2009-04-21 06:48:31 -07:00
  state: closed
- user: webbynode
  updated_at: 2009-07-08 18:41:03 -07:00
  body: This issue was opened using GitHub API and Octopi
  title: Sample issue
  number: 13
  votes: 0
  closed_at: 2009-04-20 20:53:23 -07:00
  labels: []

  created_at: 2009-04-20 18:56:17 -07:00
  state: closed
- user: fcoury
  updated_at: 2009-07-08 18:41:03 -07:00
  body: |-
    require File.join(File.dirname(__FILE__), '..', 'lib', 'octopi')
    
    include Octopi
    
    user = user.find("bcalloway")
    
    It seems that when issue is called using your find method, there is the following error: ./lib/../lib/octopi.rb:139:in find_plural': undefined methodeach' for nil:NilClass (NoMethodError)
    
        from ./lib/../lib/octopi.rb:133:in `find_all'
        from ./lib/../lib/octopi.rb:237:in `find_all'
        from lib/myissues.rb:17
    
    This is the code that produces the error:
    
        require File.join(File.dirname(FILE), '..', 'lib', 'octopi')
        include Octopi
    
        user = User.find("bcalloway")
        puts user.name
    
        repo = user.repository("myproject")
        puts repo.description
    
        issue = Issue.find_all(user.login, repo.name)
        puts "First open issue: #{issue.number} - #{issue.title} - Created at: #{issue.created_at}"
  title: Bug while fetching repositories using Issue.find_all(user, repo)
  number: 11
  votes: 0
  closed_at: 2009-04-20 14:16:22 -07:00
  labels: 
  - bug
  created_at: 2009-04-20 13:58:34 -07:00
  state: closed
- user: runpaint
  updated_at: 2009-07-08 18:41:02 -07:00
  body: Valid user names, repository names, and SHAs match a regex, so we should check for bad data and raise a useful exception if we see it.
  title: Validate User Names, Repository Names, and SHAs
  number: 6
  votes: 0
  closed_at: 2009-04-21 08:43:58 -07:00
  labels: []

  created_at: 2009-04-20 08:35:17 -07:00
  state: closed
- user: runpaint
  updated_at: 2009-07-08 18:41:02 -07:00
  body: When we generate method names for an object we should use a '?' suffix if the attribute is boolean. For example, a Repository object should have a .fork? and a .private? method. This is not only a better reflection of conventions, it also disambiguates between, in this example, 'fork' being a verb, i.e. a method which causes the repository to be forked, and 'fork' being an attribute, i.e. indicating whether the repository has been forked.
  title: Boolean Attributes' Names Should Have '?' Suffix
  number: 2
  votes: 0
  closed_at: 2009-04-22 16:34:30 -07:00
  labels: 
  - Planned
  created_at: 2009-04-20 08:20:34 -07:00
  state: closed
